{
  "action": "create_or_modify_feature",
  "feature_name": "Client-Side AI Triage Agent",
  "goal": "Continuously detect, de-duplicate, and summarize errors/perf anomalies inside each tenant system, producing concise incident cards and masked repro sandboxes for escalation—while keeping token usage very low.",
  "ownership_and_billing": {
    "owner": "Tenant Owner controls enable/disable visibility and receives read-only reports",
    "payer": "Provider pays for triage agent usage from a separate provider budget (never debits tenant’s business AI quota)"
  },
  "scoping": {
    "tenant_isolation": true,
    "data_access": "Application logs/metrics/traces generated by the tenant’s own system only",
    "no_production_mutations": true
  },
  "architecture": {
    "inputs": [
      "OpenTelemetry metrics/traces (latency, error rate, throughput)",
      "App logs (structured; with PII redaction at source)",
      "Deployment metadata (app version, commit hash, env, feature-flag states)"
    ],
    "processors": [
      "Rule engine for thresholds and spike detection",
      "Error fingerprinting (normalized message + stack-top hash + route + version)",
      "Embedding-based clustering for near-duplicates (small, cheap model)"
    ],
    "llm_calls": {
      "tier_A_small_model": "Short summarization/classification for N clusters (cheap default)",
      "tier_B_large_model": "Escalation only when severity is high OR tier A confidence < threshold"
    },
    "outputs": [
      "Incident cards (per cluster)",
      "Nightly digest (tenant-level)",
      "Optional escalation payload to Provider Portal"
    ]
  },
  "cost_controls": {
    "budgets": { "monthly_tokens": 100000, "per_min_limit": 2000, "hard_stop": true },
    "batching_interval_seconds": 300,
    "reservoir_sampling_pct": 5,
    "max_examples_per_cluster": 3,
    "max_clusters_per_summary": 20,
    "guarded_context_kb": 2,
    "escalation_gates": {
      "severity_at_least": "high",
      "or_confidence_below": 0.6
    }
  },
  "triggers": {
    "latency_p95_ms": 1500,
    "error_rate_pct": 2.0,
    "spike_multiplier": 3.0,
    "novel_fingerprint_min_count": 5
  },
  "privacy_and_security": {
    "pii_redaction": [
      "Email, phone, tokens, card-like numbers, addresses",
      "Truncate payloads to context cap",
      "Hash identifiers where useful for correlation"
    ],
    "secret_handling": "Never include secrets in prompts; enforce server-side redaction",
    "data_retention_days": 30
  },
  "llm_prompts": {
    "tier_A_summary_prompt": "Summarize these error/performance clusters. For each cluster return: {id, severity, short_cause(<=25w), impacted_roles, endpoints, likely_change(1 line), candidate_runbook_id}. Keep each cluster under 60 words. If uncertain, mark confidence 0.0–1.0.",
    "tier_B_deep_dive_prompt": "Given a single severe/uncertain cluster with minimal context, produce: {brief_reasoning(<=40w), hypothesis, top_2_safe_experiments (internal-only), minimal_code_or_config_delta (sketch), rollback_steps, confidence}."
  },
  "incident_card_schema": {
    "id": "string (cluster hash)",
    "severity": "low|medium|high|critical",
    "confidence": "0.0-1.0",
    "first_seen": "ISO8601",
    "last_seen": "ISO8601",
    "counts": { "events": "int", "unique_users": "int" },
    "env": "prod|staging|…",
    "app_version": "string",
    "feature_flags": "object",
    "impacted_roles": ["Owner|Staff|Accountant|..."],
    "endpoints": ["GET /v1/..."],
    "short_cause": "string",
    "likely_change": "deploy|flag|dependency|config|unknown",
    "candidate_runbook_id": "string",
    "repro": {
      "exemplar_event_ids": ["id1","id2"],
      "masked_snapshot_id": "string",
      "sandbox_url": "url (created lazily by provider on escalation)"
    }
  },
  "escalation_policy": {
    "when": [
      "severity in ['high','critical']",
      "OR novel fingerprint with growing velocity",
      "OR tier_A confidence < 0.6"
    ],
    "what_to_send": [
      "incident_card",
      "3 exemplars (masked)",
      "feature-flag matrix (diff since last deploy)",
      "links to recent deploys and dashboards"
    ],
    "destination": "Provider Federated Portal (AI Developer inbox/queue)"
  },
  "tenant_owner_experience": {
    "visibility": [
      "Read-only incident cards & nightly digest inside tenant admin portal",
      "Usage dashboard for triage agent spend (provider-paid) and throttling state"
    ],
    "controls": [
      "Toggle feature on/off",
      "Adjust sensitivity (conservative/normal/aggressive)"
    ]
  },
  "failure_modes_and_backoff": {
    "on_outage": "Increase batching window, raise sampling, summarize deltas only",
    "on_budget_exhausted": "Stop LLM calls; continue rule-based alerts; notify provider"
  },
  "telemetry_and_audit": {
    "log_fields": ["tenant_id","cluster_id","model_tier","tokens_in","tokens_out","cost_est","pii_redaction_applied"],
    "export_destinations": ["provider_audit_bus","tenant_audit_log (redacted)"]
  },
  "integration_points": {
    "observability": ["OpenTelemetry","Sentry-like API","Grafana/Prometheus"],
    "idp": ["SAML/OIDC (read-only claims for role context)"],
    "webhooks": ["escalation_to_provider_portal"]
  },
  "rollout": {
    "phases": ["internal tenants","limited beta","general availability"],
    "metrics": ["MTTD","MTTR","token_cost_per_incident","false_positive_rate"]
  },
  "acceptance_criteria": [
    "≤$X monthly cost per 100 tenants at default volume",
    "≥30% reduction in mean time to first useful signal (MTTD)",
    "All prompts stay under configured token caps; no PII leaks (verified by tests)"
  ]
}