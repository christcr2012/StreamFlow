
# ===================================================================
# üöÄ STREAMFLOW PLATFORM ENVIRONMENT VARIABLES
# Complete configuration for enterprise-grade business management platform
# ===================================================================
#
# This file shows you ALL the settings StreamFlow needs to work properly.
# Think of these as "configuration switches" that tell your app how to behave.
#
# üìã HOW TO USE:
# üíª Local:      Copy this to .env and fill in your real values
# üöÄ Vercel:     Add these in Vercel Dashboard ‚Üí Settings ‚Üí Environment Variables
# üîß Production: Use secure environment variable management
#
# üîê SECURITY NOTES:
# - Never commit real passwords or API keys to version control
# - Use strong, unique passwords for all accounts
# - Enable 2FA wherever possible
# - Rotate keys regularly in production
#
# üîë HOW TO GENERATE REQUIRED KEYS:
#
# 1. PASSWORD HASH (for PROVIDER_ADMIN_PASSWORD_HASH):
#    npx bcrypt-cli "your-password" 12
#
# 2. MASTER ENCRYPTION KEY (for MASTER_ENC_KEY):
#    node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
#
# 3. TOTP SECRET (for PROVIDER_ADMIN_TOTP_SECRET):
#    Use Google Authenticator app or generate with:
#    node -e "console.log(require('crypto').randomBytes(20).toString('hex'))"
#
# 4. SESSION SECRET (for SESSION_SECRET):
#    node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
#
# ===================================================================

# ===================================================================
# üè¢ DUAL-LAYER PROVIDER AUTHENTICATION SYSTEM
# Battle-tested "break-glass" authentication with DB + environment fallback
# ===================================================================

# --- Your Platform Configuration ---
APP_URL=https://stream-flow-xi.vercel.app/
# ‚òùÔ∏è This is the web address where your StreamFlow platform lives

# --- Provider Break-Glass Emergency Admin ---
# These credentials work even when the database is unavailable
PROVIDER_ADMIN_EMAIL=your-provider-email@domain.com
PROVIDER_ADMIN_PASSWORD_HASH=your-bcrypt-hashed-password-here
PROVIDER_ADMIN_TOTP_SECRET=your-base32-totp-secret-here
# ‚òùÔ∏è Emergency provider access when database is down (use bcrypt hash, not plain password)
# üîê Generate hash: npx bcrypt-cli "your-password" 12
# üîê Generate TOTP: Use Google Authenticator or similar app

# --- Master Encryption Key for Provider Settings ---
MASTER_ENC_KEY=your-base64-encoded-256-bit-encryption-key
# ‚òùÔ∏è 256-bit AES key for encrypting sensitive provider data in database
# üîê Generate key: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"

# --- Developer System Authentication ---
DEVELOPER_EMAIL=your-developer-email@domain.com
DEVELOPER_PASSWORD=your-developer-password
NEXT_PUBLIC_DEVELOPER_EMAIL=your-developer-email@domain.com
# ‚òùÔ∏è Developer system access credentials (environment-based, not database)

# --- Accountant System Authentication ---
ACCOUNTANT_EMAIL=accountant@your-domain.com
ACCOUNTANT_PASSWORD=your-accountant-password
NEXT_PUBLIC_ACCOUNTANT_EMAIL=accountant@your-domain.com
# ‚òùÔ∏è Accountant system access credentials (environment-based, not database)

# --- Legacy Provider Variables (for backward compatibility) ---
PROVIDER_EMAIL=your-provider-email@domain.com
PROVIDER_PASSWORD=your-provider-password
NEXT_PUBLIC_PROVIDER_EMAIL=your-provider-email@domain.com
# ‚òùÔ∏è Legacy provider credentials (kept for backward compatibility)

# üéØ ENVIRONMENT MODE
# Controls whether you're testing or serving real clients
DISABLE_DEV_USERS=false
# ‚òùÔ∏è Set to 'true' when you're ready to serve real clients (disables test accounts)

# --- Your Database (Neon PostgreSQL) ---
DATABASE_URL=postgresql://neondb_owner:your_password@ep-your-host-pooler.region.aws.neon.tech/neondb?sslmode=require
# ‚òùÔ∏è This connects to your Neon database - get this from neon.com dashboard

# --- Your Security Keys ---
ADMIN_BOOTSTRAP_TOKEN=your-admin-bootstrap-token-uuid
# ‚òùÔ∏è A secret key that lets you access admin features (make this random and long)

SESSION_SECRET=your-session-secret-key
# ‚òùÔ∏è Keeps user logins secure (make this random and long)

# --- Your AI Assistant (OpenAI) ---
OPENAI_API_KEY=sk-your-openai-api-key
# ‚òùÔ∏è Get this from openai.com - powers lead analysis and business intelligence
# üí∞ Cost: ~$15-25/month for active cleaning business

# ===================================================================
# üè¢ PROVIDER REVENUE COLLECTION
# These are YOUR Stripe settings for collecting revenue from clients
# ===================================================================

# --- Provider Stripe Account (YOUR revenue) ---
PROVIDER_STRIPE_SECRET_KEY=sk_test_your_provider_stripe_secret_key
PROVIDER_STRIPE_PUBLISHABLE_KEY=pk_test_your_provider_stripe_publishable_key
PROVIDER_STRIPE_WEBHOOK_SECRET=whsec_your_provider_webhook_secret
# ‚òùÔ∏è YOUR Stripe account - clients pay YOU for StreamFlow subscriptions
# üí∞ Revenue: BASE (free), PRO ($97/month), ELITE ($297/month) + per-lead billing

# --- Provider Stripe Price IDs ---
PROVIDER_STRIPE_BASE_PRICE_ID=price_your_base_plan_id
PROVIDER_STRIPE_PRO_PRICE_ID=price_your_pro_plan_id
PROVIDER_STRIPE_ELITE_PRICE_ID=price_your_elite_plan_id
# ‚òùÔ∏è Create these in YOUR Stripe dashboard for subscription billing

# ===================================================================
# üë• CLIENT REVENUE COLLECTION
# Each client uses their own Stripe account for their customer billing
# ===================================================================

# --- Client Stripe Account (client revenue) ---
STRIPE_SECRET_KEY=sk_test_client_stripe_secret_key
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_client_stripe_publishable_key
STRIPE_WEBHOOK_SECRET=whsec_client_webhook_secret
# ‚òùÔ∏è Client's Stripe account - clients bill THEIR customers
# üîÑ HAND-OFF: Each client organization uses their own Stripe account

# --- Email Service (SendGrid) ---
SENDGRID_API_KEY=SG.your-sendgrid-api-key
EMAIL_FROM=noreply@your-domain.com
# ‚òùÔ∏è Sends automated emails (notifications, invoices, etc.)
# üîÑ HAND-OFF: Clients can use their own email service

# --- SMS Service (Twilio) ---
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=+1234567890
# ‚òùÔ∏è Sends text message alerts for hot leads
# üîÑ HAND-OFF: Clients can use their own phone numbers

# ===================================================================
# üë• CLIENT-SIDE VARIABLES
# These will be different for each client organization
# ===================================================================

# --- Client Organization Setup ---
SEED_ORG_NAME=Your Client Company Name
SEED_OWNER_EMAIL=owner@client-company.com
SEED_OWNER_PASSWORD=secure_password_123
# ‚òùÔ∏è Creates the main client account when setting up a new organization

# --- Client Staff Accounts ---
SEED_STAFF_EMAIL=staff@client-company.com
SEED_STAFF_PASSWORD=secure_password_456
# ‚òùÔ∏è Creates staff accounts for the client's team

# --- Business Rules ---
HOT_SCORE_THRESHOLD=70
# ‚òùÔ∏è Leads scoring 70+ trigger immediate alerts (adjust per client)

# ===================================================================
# üß™ DEVELOPMENT & TESTING
# These help you test the system safely
# ===================================================================

# --- Test User Accounts (work with any password) ---
DEV_OWNER_EMAIL=owner@test.com
DEV_MANAGER_EMAIL=manager@test.com
DEV_STAFF_EMAIL=staff@test.com
# ‚òùÔ∏è Use these to test different user roles without creating real accounts

# --- Legacy Support ---
DEV_USER_EMAIL=dev@your-domain.local
DEV_ORG_ID=dev-test-org-id
# ‚òùÔ∏è Password for development test accounts

# ===================================================================
# üîß ADVANCED FEATURES (Optional)
# These enable special functionality
# ===================================================================

# --- API Security ---
PUBLIC_ALLOWED_ORIGINS=https://your-domain.com,https://your-app.vercel.app
# ‚òùÔ∏è Controls which websites can access your API

# --- Automation Security ---
MV_CRON_TOKEN=your-cron-security-token
# ‚òùÔ∏è Protects automated billing and maintenance tasks

# --- Provider Federation (Future Feature) ---
PROVIDER_FEDERATION_ENABLED=false
PROVIDER_KEYS_JSON={}
PROVIDER_CLOCK_SKEW_SEC=300
PROVIDER_FEDERATION_SIG_SHA256=false
# ‚òùÔ∏è Allows multiple StreamFlow instances to work together (advanced)
